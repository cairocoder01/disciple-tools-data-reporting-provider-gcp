name: Release

on: push
# === Uncomment the lines below and delete the line above to run build only when tags starting with "v" are pushed
#on:
#  push:
#    tags:
#    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  phpcs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: composer install --dev --prefer-dist --no-progress --no-suggest
      - name: PHPCS check
        uses: chekalsky/phpcs-action@v1
        with:
          phpcs_bin_path: './vendor/bin/phpcs'

#=== Uncomment the below to build the plugin zip file and upload to a draft release ===
#  build:
#    runs-on: ubuntu-latest
#    needs: phpcs
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Cache Composer packages
#      id: composer-cache
#      uses: actions/cache@v2
#      with:
#        path: vendor
#        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#        restore-keys: |
#          ${{ runner.os }}-php-
#
#    - name: Install dependencies
#      if: steps.composer-cache.outputs.cache-hit != 'true'
#      run: composer install --prefer-dist --no-progress --no-suggest
#
#    # Below borrowed from https://github.com/actions/upload-release-asset
#    - name: Build project
#      run: |
#        mkdir disciple-tools-data-reporting-provider-azure |
#        cp -r disciple-tools-data-reporting-provider-azure.php LICENSE exports includes languages vendor disciple-tools-data-reporting-provider-azure/ |
#        zip -r disciple-tools-data-reporting-provider-azure.zip disciple-tools-data-reporting-provider-azure
#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ github.ref }}
#        release_name: Release ${{ github.ref }}
#        draft: true
#        prerelease: false
#    - name: Upload Release Asset
#      id: upload-release-asset
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#        asset_path: ./disciple-tools-data-reporting-provider-azure.zip
#        asset_name: disciple-tools-data-reporting-provider-azure.zip
#        asset_content_type: application/zip
